// test url: https://cs1110.cs.virginia.edu/emails.html
// Help from this link: http://www.rexegg.com/regex-quickstart.html

import java.util.ArrayList;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class EmailHunt {

	public static void main(String[] args) throws Exception {
		Scanner keyboard = new Scanner(System.in);
		
		System.out.print("What web page should we search for email addresses? ");
		String url = keyboard.nextLine();
		
		CachingURL emailHuntv2 = new CachingURL(url);
		Scanner webReader = new Scanner(emailHuntv2.openStream());
		
		String wholePage = "";
		
		// need to fix this before submission (only looping through 27 lines)
		// while (webReader.hasNextLine())
		
		while (webReader.hasNextLine()) {
			wholePage += webReader.nextLine() + "\n";
		}
		
		wholePage = formatPage(wholePage).toUpperCase();
		
		//wholePage = formatPage(wholePage);
		//System.out.println("first: " + wholePage.indexOf("@") + ", second: " + wholePage.indexOf("@", wholePage.indexOf("@") + 1) + ", last: " + wholePage.lastIndexOf("@"));
		//System.out.println(wholePage.length());
		//System.out.println(formatPage(wholePage));
		System.out.println(validEmails(wholePage));
	}
	
	public static String formatPage(String page) {
		page = page.replaceAll(" at ", "@");
		page = page.replaceAll(" \\(at\\) ", "@");
		page = page.replaceAll("\\ \\(at\\)", "@");
		page = page.replaceAll("\\(at\\)\\ ", "@");
		page = page.replaceAll("\\(at\\)", "@");
		page = page.replaceAll(" dot ", ".");
		page = page.replaceAll(" \\(dot\\) ", ".");
		page = page.replaceAll("  \\(dot\\) ", ".");
		page = page.replaceAll("\\ \\(dot\\)", ".");
		page = page.replaceAll("\\(dot\\)\\ ", ".");
		page = page.replaceAll("NOSPAM", "");
		page = page.replaceAll("\"", " ");
		page = page.replaceAll("<br><br>", " ");
		page = page.replaceAll("\\W ", " ");
		
		return page;
	}
	
	public static ArrayList<String> validEmails (String page) {
		ArrayList<String> validEmails = new ArrayList<String>();
		
		// input = string, with linebreaks
		// loop through each @
		// read each direction until reach " "
		// add 'email' to potentialEmails
		// [A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}
		
		int n = 0;
		for (int i = 0 ; i < page.length() ; i++) {
			int start = page.indexOf("@", page.indexOf("@") + n);
			String email = "";
			int j = 0;
			while (page.charAt(start - j) != ' ') {
				email = page.charAt(start - j) + email;
				j++;
			}
			j = 1;
			while (page.charAt(start + j) != ' ') {
				email += page.charAt(start + j);
				j++;
			}
			
			Pattern address = Pattern.compile("[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,14}");
			Matcher valid = address.matcher(email);
//			System.out.println(email);
			if (valid.matches()) {
				
				if (!validEmails.contains(email.toLowerCase())) {
					validEmails.add(email.toLowerCase());
				}
				// otherwise don't add it
			}
			n++;
		}
		
		return validEmails;
	}

}
